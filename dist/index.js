/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Snow =\n/*#__PURE__*/\nfunction () {\n  function Snow() {\n    var opt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Snow);\n\n    // 是否是雨\n    this.isRain = opt.isRain || false; // 元素\n\n    this.el = null; // 倾斜方向\n\n    this.dir = opt.dir || \"r\"; // 直径\n\n    this.width = 0; // 最大直径\n\n    this.maxWidth = opt.maxWidth || 80; // 最小直径\n\n    this.minWidth = opt.minWidth || 2; // 透明度\n\n    this.opacity = 0; // 水平位置\n\n    this.x = 0; // 重置位置\n\n    this.y = 0; // z轴位置\n\n    this.z = 0; // 水平速度\n\n    this.sx = 0; // 是否左右摇摆\n\n    this.isSwing = false; // 左右摇摆的步长\n\n    this.stepSx = 0.02; // 左右摇摆的正弦函数x变量\n\n    this.swingRadian = 1; // 左右摇摆的正弦x步长\n\n    this.swingStep = 0.01; // 垂直速度\n\n    this.sy = 0; // 最大速度\n\n    this.maxSpeed = opt.maxSpeed || 4; // 最小速度\n\n    this.minSpeed = opt.minSpeed || 1; // 快速划过的最大速度\n\n    this.quickMaxSpeed = opt.quickMaxSpeed || 10; // 快速划过的最小速度\n\n    this.quickMinSpeed = opt.quickMinSpeed || 8; // 快速划过的宽度\n\n    this.quickWidth = opt.quickWidth || 80; // 快速划过的透明度\n\n    this.quickOpacity = opt.quickOpacity || 0.2; // 窗口尺寸\n\n    this.windowWidth = window.innerWidth;\n    this.windowHeight = window.innerHeight;\n    this.init();\n  } // 随机初始化属性\n\n\n  _createClass(Snow, [{\n    key: \"init\",\n    value: function init(reset) {\n      var isQuick = Math.random() > 0.8;\n      this.isSwing = Math.random() > 0.8;\n      this.width = isQuick ? this.quickWidth : Math.floor(Math.random() * this.maxWidth + this.minWidth);\n      this.opacity = isQuick ? this.quickOpacity : Math.random();\n      this.x = Math.floor(Math.random() * (this.windowWidth - this.width));\n      this.y = Math.floor(Math.random() * (this.windowHeight - this.width));\n\n      if (reset && Math.random() > 0.8) {\n        this.x = -this.width;\n      } else if (reset) {\n        this.y = -this.width;\n      }\n\n      this.sy = isQuick ? Math.random() * this.quickMaxSpeed + this.quickMinSpeed : Math.random() * this.maxSpeed + this.minSpeed;\n      this.sx = this.dir === \"r\" ? this.sy : -this.sy;\n      this.z = isQuick ? Math.random() * 300 + 200 : 0;\n      this.swingStep = 0.01 * Math.random();\n      this.swingRadian = Math.random() * (1.1 - 0.9) + 0.9;\n    } // 设置样式\n\n  }, {\n    key: \"setStyle\",\n    value: function setStyle() {\n      this.el.style.cssText = \"\\n          position: fixed;\\n          left: 0;\\n          top: 0;\\n          display: block;\\n          width: \".concat(this.isRain ? 1 : this.width, \"px;\\n          height: \").concat(this.width, \"px;\\n          opacity: \").concat(this.opacity, \";\\n          background-image: radial-gradient(#fff 0%, rgba(255, 255, 255, 0) 60%);\\n          border-radius: 50%;\\n          z-index: 9999999999999;\\n          pointer-events: none;\\n          transform: translate(\").concat(this.x, \"px, \").concat(this.y, \"px) \").concat(this.getRotate(this.sy, this.sx), \";\\n      \");\n    } // 渲染\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.el = document.createElement(\"div\");\n      this.setStyle();\n      document.body.appendChild(this.el);\n    }\n  }, {\n    key: \"move\",\n    value: function move() {\n      if (this.isSwing) {\n        // if (this.sx >= 1 || this.sx <= -1) {\n        //     this.stepSx = -this.stepSx\n        // }\n        // this.sx += this.stepSx\n        if (this.swingRadian > 1.1 || this.swingRadian < 0.9) {\n          this.swingStep = -this.swingStep;\n        }\n\n        this.swingRadian += this.swingStep;\n\n        if (this.isRain) {\n          this.x += this.sx;\n        } else {\n          this.x += this.sx * Math.sin(this.swingRadian * Math.PI);\n        }\n\n        this.y -= this.sy * Math.cos(this.swingRadian * Math.PI);\n      } else {\n        this.x += this.sx;\n        this.y += this.sy;\n      } // 完全离开窗口就调一下初始化方法，另外还需要修改一下init方法，因为重新出现我们是希望它的y坐标为0或者小于0，\n      // 这样就不会又凭空出现的感觉，而是从天上下来的\n\n\n      if (this.x < -this.width || this.x > this.windowWidth || this.y > this.windowHeight) {\n        this.init(true);\n        this.setStyle();\n      }\n\n      this.el.style.transform = \"translate3d(\".concat(this.x, \"px, \").concat(this.y, \"px, \").concat(this.z, \"px) \").concat(this.getRotate(this.sy, this.sx));\n    }\n  }, {\n    key: \"getRotate\",\n    value: function getRotate(sy, sx) {\n      return this.isRain ? \"rotate(\".concat(sx === 0 ? 0 : 90 + Math.atan(sy / sx) * (180 / Math.PI), \"deg)\") : \"\";\n    }\n  }]);\n\n  return Snow;\n}();\n\nvar Snows =\n/*#__PURE__*/\nfunction () {\n  function Snows() {\n    var opt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Snows);\n\n    this.num = opt.num || 100;\n    this.opt = opt;\n    this.snowList = [];\n    this.createSnows();\n    this.moveSnow();\n  }\n\n  _createClass(Snows, [{\n    key: \"createSnows\",\n    value: function createSnows() {\n      this.snowList = [];\n\n      for (var i = 0; i < this.num; i++) {\n        var snow = new Snow(this.opt);\n        snow.render();\n        this.snowList.push(snow);\n      }\n    }\n  }, {\n    key: \"moveSnow\",\n    value: function moveSnow() {\n      var _this = this;\n\n      window.requestAnimationFrame(function () {\n        _this.snowList.forEach(function (item) {\n          item.move();\n        });\n\n        _this.moveSnow();\n      });\n    }\n  }]);\n\n  return Snows;\n}();\n\nnew Snows({\n  isRain: true,\n  num: 300,\n  maxSpeed: 15\n});\nnew Snows({\n  isRain: false,\n  num: 150\n});\n\n//# sourceURL=webpack://demo/./src/index.js?");
/******/ })()
;